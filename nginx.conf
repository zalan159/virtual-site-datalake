server {
    listen 80;
    server_name your-domain.com;  # 替换为您的域名
    root /path/to/your/web/dist;  # 替换为实际的dist路径
    index index.html;

    # 主React应用的静态文件
    location /assets/ {
        alias /path/to/your/web/dist/assets/;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Access-Control-Allow-Origin "*";
    }

    # GoView子应用
    location /goview/ {
        alias /path/to/your/web/dist/goview/;
        try_files $uri $uri/ /goview/index.html;
        
        # 处理GoView的静态资源
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Access-Control-Allow-Origin "*";
        }
    }

    # GoView的API代理 (如果需要)
    location /api/goview/ {
        proxy_pass http://localhost:8000;  # 后端API地址
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # 主应用的API代理
    location /api/ {
        proxy_pass http://localhost:8000;  # 后端API地址
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # React Router的回退路由
    location / {
        try_files $uri $uri/ /index.html;
    }

    # 安全头设置
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
} 